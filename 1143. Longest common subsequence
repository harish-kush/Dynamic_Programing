class Solution {
public:
    int helper(string& a, string& b,int i, int j,vector<vector<int>>& dp){
        if(i>=a.size() || j>=b.size()) return 0;

        if(dp[i][j]!=-1) return dp[i][j];

        if(a[i]==b[j]){
            return dp[i][j] = 1 + helper(a,b,i+1,j+1,dp);
        }
        else{
            return dp[i][j]=max(helper(a,b,i+1,j,dp),helper(a,b,i,j+1,dp));
        }
    }
    int longestCommonSubsequence(string text1, string text2) {
        vector<vector<int>>dp(text1.size(),vector<int>(text2.size(),-1));
        return helper(text1, text2,0,0,dp);
    }
};
